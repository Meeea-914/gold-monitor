#----------------------------------------------------------------------------------------------------------#
#-- Name     : gold-monitor.service
#-- Purpose  : Service file for gold-monitor prometheus stats exporter
#-- Project  : https://github.com/philippnormann/gold-monitor
#-- Alerts   : https://github.com/caronc/apprise/wiki
#-- Requires : gold python3 pipenv git rsyslog
#------------:
#-- Date     : 2021-08-28
#-- Compat   : Tested w/ gold-monitor commit 9472b6c5adbf9c47f9ec9e4ab7f9ac73f79c64bf / 2021-08-26
#-- Version  : 1.0
#------------:
#-- Dev Todo : 1) Consider adding systemd notifier top-level drop in command for service outage webhook exec
#--          : 2) Add a [Unit] call for "After=gold-proc.service" if/when gold is run as a service
#----------------------------------------------------------------------------------------------------------#
# Base: operating directory and git clone will be as follows:
#       - /opt/gold-monitor
#
# Note: Gold process owner is assumed to be named 'gold-proc', replace as needed for your deployment
#       - proc user will be the one running the main GUI or CLI farming processes
#       - proc user will be the owner of the main gold config file
#       - exporters should run as a separate user from the monitored process in general, however...
#       - if you want gold-monitor.service running as the gold processes owner, modify these commands
#       - to allow gold-monitor access to the gold config we will create a shared group for the users
#
# Create shared group for 'gold-monitor' and 'gold-proc' related user accounts
#   sudo groupadd --gid 8001 gold
#
# User creation for gold-monitor service
#   sudo groupadd --gid 14800 gold-monitor
#   sudo useradd -d /opt/gold-monitor -g gold-monitor -M --shell /sbin/nologin --uid 14800 gold-monitor
#
# Group access mods for gold-monitor and gold-proc users
#   sudo usermod --groups gold --append gold-monitor
#   sudo usermod --groups gold --append gold-proc
#   sudo chmod 770 /home/gold-proc
#   sudo chown gold-proc:gold /home/gold-proc
#   sudo chown -R gold-proc:gold /home/gold-proc/.gold
#   sudo chmod 640 /home/gold-proc/.gold/mainnet/config/config.yaml
#
# Create operating environment for gold-monitor
#   sudo cd /opt && git clone https://github.com/philippnormann/gold-monitor.git && cd /opt/gold-monitor
#   sudo chown -R gold-monitor:gold /opt/gold-monitor
#   sudo -u gold-monitor $(which pipenv) install
#   sudo -u gold-monitor $(which pipenv) run alembic upgrade head
#   sudo -u gold-monitor cp config-example.json config.json
#   <edit config.json>
#
# Run gold-monitor command to test
#   <ensure primary .gold directory and config is read-able by gold-monitor user according to previous commands>
#   sudo -u gold-monitor $(which pipenv) run python -m monitor
#   <if gold-monitor is working correctly, ctrl-c to kill the test>
#
# Setup rsyslog config for gold-monitor to avoid system log flooding
#   sudo touch /var/log/gold-monitor.log
#   sudo chown syslog:adm /var/log/gold-monitor.log
#   sudo cp etc/rsyslog.d/gold-monitor.conf /etc/rsyslog.d/
#   sudo systemctl restart rsyslog
#
# Execute systemd commands for gold-monitor.service
#   sudo cp etc/systemd/system/gold-monitor.service /etc/systemd/system/
#   sudo systemctl daemon-reload
#   sudo systemctl start gold-monitor
#   sudo systemctl status gold-monitor
#   <if service is running without errors then enable in next step>
#   sudo systemctl enable gold-monitor
#
# Check to see if port is open and running as gold-monitor user
#   sudo netstat -lntp | grep 14800
#   <example output>:
#   tcp        0      0 0.0.0.0:14800            0.0.0.0:*               LISTEN      3672604/python
#
# Check procs to ensure gold-monitor user is owner of the previously identified process on port 14800
#   sudo ps auxf | grep gold-monitor | grep -v grep
#   <example output>:
#   gold-mo+ 3672604  1.0  0.0 883468 88568 ?        Ssl  Aug31   6:20 /opt/gold-monitor/.local/share/virtualenvs/gold-monitor-kBBgivIG/bin/python -m monitor
#
# Finally, ensure service is operating as expected (example output below)
#   systemctl status gold-monitor
#      ‚óè gold-monitor.service - gold-monitor
#       Loaded: loaded (/etc/systemd/system/gold-monitor.service; enabled; vendor preset: disabled)
#       Active: active (running) since Tue 2021-08-31 17:40:20 PDT; 9h ago
#     Main PID: 3672604 (python)
#       Tasks: 4 (limit: 1649800)
#       Memory: 76.0M
#       CGroup: /system.slice/gold-monitor.service
#               ‚îî‚îÄ3672604 /opt/gold-monitor/.local/share/virtualenvs/gold-monitor-kBBgivIG/bin/python -m monitor
#     Sep 01 03:30:00 pipenv[3672604]: 2021-09-01T03:30:00.315 INFO   üü° Pool Found Last 24H: 3410
#     Sep 01 03:30:00 pipenv[3672604]: 2021-09-01T03:30:00.315 INFO   üü¢ Pool Acknowledged Last 24H: 3409
#     Sep 01 03:30:00 pipenv[3672604]: 2021-09-01T03:30:00.316 INFO   ‚ùå Pool Errors 24h: 0
#     Sep 01 03:30:00 pipenv[3672604]: 2021-09-01T03:30:00.341 INFO   üì∂ Full Node Peer Count: 8
#     Sep 01 03:30:00 pipenv[3672604]: 2021-09-01T03:30:00.342 INFO   üì∂ Farmer Peer Count: 1
#     Sep 01 03:30:00 pipenv[3672604]: 2021-09-01T03:30:00.342 INFO   üì∂ Harvester Peer Count: 1
#     Sep 01 03:30:01 pipenv[3672604]: 2021-09-01T03:30:01.296 INFO   ---------------------------
#
# Ensure Prometheus can access the gold-monitor exporter via firewall
#   <exec firewall command for TCP port 14800 according to your deployment: iptables, firewall-cmd, etc>
#   sudo firewall-cmd --permanent --zone=public --add-port 14800/tcp
#   sudo firewall-cmd --reload
#
# Check log file to ensure functionality as expected
#   sudo tail -f /var/log/gold-monitor.log
#   <output should be consistent status at INFO level>
#
# Optional: Setup logrotate config for log file to avoid clogging up disk space
#   sudo cp etc/logrotate.d/gold-monitor /etc/logrotate.d/gold-monitor
#   sudo sed -i '\:/var/log/gold-monitor.log:d' /etc/logrotate.d/syslog
#   sudo logrotate -f /etc/logrotate.conf
# Done and done!
#
#--------------------------------------------------------------------------------------------------#
[Unit]
Description=gold-monitor
After=network.target
AssertPathExists=/opt/gold-monitor

[Service]
User=gold-monitor
Group=gold-monitor
Type=simple

StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=gold-monitor

KillMode=mixed
SendSIGKILL=yes
TimeoutSec=30

WorkingDirectory=/opt/gold-monitor
ExecStart=/usr/bin/env pipenv run python -m monitor
Environment="GOLD_ROOT=/home/gold-proc/.gold/mainnet"
Restart=always
RestartSec=600

[Install]
WantedBy=multi-user.target
